package com.laofansay.work.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CstJobAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCstJobAllPropertiesEquals(CstJob expected, CstJob actual) {
        assertCstJobAutoGeneratedPropertiesEquals(expected, actual);
        assertCstJobAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCstJobAllUpdatablePropertiesEquals(CstJob expected, CstJob actual) {
        assertCstJobUpdatableFieldsEquals(expected, actual);
        assertCstJobUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCstJobAutoGeneratedPropertiesEquals(CstJob expected, CstJob actual) {
        assertThat(expected)
            .as("Verify CstJob auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCstJobUpdatableFieldsEquals(CstJob expected, CstJob actual) {
        assertThat(expected)
            .as("Verify CstJob relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getExecuteType()).as("check executeType").isEqualTo(actual.getExecuteType()))
            .satisfies(e -> assertThat(e.getCategory()).as("check category").isEqualTo(actual.getCategory()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()))
            .satisfies(e -> assertThat(e.getJobProps()).as("check jobProps").isEqualTo(actual.getJobProps()))
            .satisfies(e -> assertThat(e.getChannel()).as("check channel").isEqualTo(actual.getChannel()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCstJobUpdatableRelationshipsEquals(CstJob expected, CstJob actual) {
        assertThat(expected)
            .as("Verify CstJob relationships")
            .satisfies(e -> assertThat(e.getCustomer()).as("check customer").isEqualTo(actual.getCustomer()));
    }
}
