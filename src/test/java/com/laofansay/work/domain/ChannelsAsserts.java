package com.laofansay.work.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ChannelsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChannelsAllPropertiesEquals(Channels expected, Channels actual) {
        assertChannelsAutoGeneratedPropertiesEquals(expected, actual);
        assertChannelsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChannelsAllUpdatablePropertiesEquals(Channels expected, Channels actual) {
        assertChannelsUpdatableFieldsEquals(expected, actual);
        assertChannelsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChannelsAutoGeneratedPropertiesEquals(Channels expected, Channels actual) {
        assertThat(expected)
            .as("Verify Channels auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChannelsUpdatableFieldsEquals(Channels expected, Channels actual) {
        assertThat(expected)
            .as("Verify Channels relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getCategory()).as("check category").isEqualTo(actual.getCategory()))
            .satisfies(e -> assertThat(e.getRate()).as("check rate").isEqualTo(actual.getRate()))
            .satisfies(e -> assertThat(e.getProps()).as("check props").isEqualTo(actual.getProps()))
            .satisfies(e -> assertThat(e.getOpen()).as("check open").isEqualTo(actual.getOpen()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChannelsUpdatableRelationshipsEquals(Channels expected, Channels actual) {}
}
